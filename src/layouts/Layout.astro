---
import Header from '../components/common/Header.astro';
import Footer from '../components/common/Footer.astro';
import SEO from '../components/common/Seo.astro';
import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  bodyClass?: string;
}

const {
  title,
  description,
  image,
  bodyClass = '',
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="color-scheme" content="light dark" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Cloudflare Turnstile -->
    <script is:inline src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

    <!-- Non-blocking Font Awesome -->
    <link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
    <link
      rel="preload"
      as="style"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      onload="this.onload=null;this.rel='stylesheet'"
      crossorigin
    >
    <noscript>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" crossorigin>
    </noscript>

    <SEO title={title} description={description} image={image} />
  </head>
  <body class={bodyClass}>
    <Header />
    
    <main class="pt-[73px]">
      <slot />
    </main>
    
    <Footer />

    <script>
      // Dark mode handling
      function initializeDarkMode() {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
          if (!savedTheme) localStorage.setItem('theme', 'light');
        }
      }
      initializeDarkMode();
      window.addEventListener('storage', (e) => {
        if (e.key === 'theme') initializeDarkMode();
      });

      // Smooth scroll for hash links
      document.addEventListener('click', (e) => {
        const link = e.target.closest('a[href^="#"]');
        if (!link) return;
        e.preventDefault();
        const id = link.getAttribute('href');
        if (!id) return;
        document.querySelector(id)?.scrollIntoView({ behavior: 'smooth' });
      });
    </script>

    <style is:global>
      /* Prevent scroll jitter */
      html {
        overflow-x: hidden;
        scroll-behavior: auto; /* Override smooth scroll from CSS */
      }
      
      body {
        overflow-x: hidden;
        min-height: 100dvh;
        background-color: var(--color-white);
        color: var(--color-gray-700);
      }
      
      body.dark {
        background-color: var(--color-gray-900);
        color: var(--color-gray-300);
      }

      /* Smooth theme transitions */
      html.dark-mode-transition,
      html.dark-mode-transition *,
      html.dark-mode-transition *:before,
      html.dark-mode-transition *:after {
        transition: background-color 300ms ease, border-color 300ms ease, color 300ms ease !important;
        transition-delay: 0 !important;
      }
    </style>
  </body>
</html>