---
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/common/Container.astro';
import Button from '../../components/common/Button.astro';
import Badge from '../../components/ui/Badge.astro';
import PageHeader from '../../components/common/PageHeader.astro';
import { portfolioProjects } from '../../data/portfolioProjects';

// Extract unique categories
const categorySet = new Set<string>();
portfolioProjects.forEach((project) => {
  categorySet.add(project.category);
});

// Convert Set to Array
const categories = Array.from(categorySet);

const stats = [
  {
    value: "5+",
    label: "Years Experience",
    icon: "fa-solid fa-calendar-check",
    color: "bg-green-500",
    textColor: "text-green-500"
  },
  {
    value: "100+",
    label: "Happy Clients",
    icon: "fa-solid fa-users",
    color: "bg-blue-500",
    textColor: "text-blue-500"
  },
  {
    value: "150+",
    label: "Projects Completed",
    icon: "fa-solid fa-check-circle",
    color: "bg-yellow-500",
    textColor: "text-yellow-500"
  },
  {
    value: "99%",
    label: "Client Satisfaction",
    icon: "fa-solid fa-heart",
    color: "bg-red-500",
    textColor: "text-red-500"
  }
];
---

<Layout title="Our Portfolio | Greenberry - Web Design for Irish Businesses">
  <!-- Hero Section using PageHeader component -->
  <PageHeader
    title="Our Portfolio"
    description="Explore our collection of successful projects designed for Irish businesses. Each website is crafted to engage visitors and drive results."
    backgroundVariant="decorated"
    badgeText="OUR WORK"
    highlightedText="Portfolio"
    highlightPosition="end"
    paddingY="md"
  />
  
  <!-- Stats Section with Category Filter (Combined) -->
  <section class="pt-12 pb-6 bg-white dark:bg-gray-900">
    <Container>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4 md:gap-6 lg:gap-8 mb-10">
        {stats.map((stat) => (
          <div class="relative bg-white dark:bg-gray-800 p-4 sm:p-6 rounded-xl border border-gray-100 dark:border-gray-700 flex flex-col items-center text-center shadow-sm hover:shadow-md transition-colors">
            <div class={`w-10 h-10 sm:w-12 sm:h-12 rounded-full ${stat.color.replace('bg-', 'bg-')}/10 flex items-center justify-center ${stat.textColor} dark:${stat.textColor} text-lg sm:text-xl mb-3`}>
              <i class={stat.icon}></i>
            </div>
            <p class={`text-2xl sm:text-3xl font-bold ${stat.textColor} dark:${stat.textColor} mb-1`}>
              {stat.value}
            </p>
            <p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base">
              {stat.label}
            </p>
          </div>
        ))}
      </div>
      
      <!-- Category Filter -->
      <div class="flex flex-wrap justify-center gap-3 mb-8">
        <button class="category-filter-btn active px-4 py-2 rounded-full bg-greenberry-600 text-white font-medium transition-colors hover:bg-greenberry-700" data-category="all">
          All Projects
        </button>
        {categories.map(category => (
          <button class="category-filter-btn px-4 py-2 rounded-full bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm text-gray-700 dark:text-gray-300 font-medium border border-gray-200/60 dark:border-gray-700/60 transition-colors hover:bg-greenberry-600 hover:text-white hover:border-transparent" data-category={category}>
            {category}
          </button>
        ))}
      </div>
    </Container>
  </section>
  
  <!-- Portfolio Grid -->
  <section class="bg-white dark:bg-gray-900">
    <Container>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 portfolio-grid">
        {portfolioProjects.map((project) => (
          <div class="group portfolio-item bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-md hover:shadow-lg border border-gray-100 dark:border-gray-700 hover:border-greenberry-500/40 dark:hover:border-greenberry-500/40" data-category={project.category}>
            <!-- Project Image with overlay -->
            <div class="relative overflow-hidden aspect-video">
              <img 
                src={project.image} 
                alt={project.title} 
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="eager"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-gray-900/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6">
                <div>
                  <Badge text={project.category} variant="primary" size="sm" class="mb-2" />
                  <h3 class="text-white text-xl font-bold">{project.title}</h3>
                </div>
              </div>
            </div>
            
            <!-- Project Info -->
            <div class="p-6">
              <div class="flex flex-wrap gap-2 mb-4">
                {project.tags && project.tags.map(tag => (
                  <span class="text-xs font-medium py-1 px-2 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">
                    {tag}
                  </span>
                ))}
              </div>
              
              <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-greenberry-600 dark:group-hover:text-greenberry-400 transition-colors">
                {project.title}
              </h3>
              
              <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2">
                {project.description}
              </p>
              
              <a 
                href={`/portfolio/${project.id}`} 
                class="inline-flex items-center text-greenberry-600 hover:text-greenberry-700 dark:text-greenberry-400 dark:hover:text-greenberry-300 font-medium"
              >
                View Project
                <span class="ml-1 text-xs group-hover:translate-x-1 transition-transform duration-300">
                  <i class="fa-solid fa-arrow-right"></i>
                </span>
              </a>
            </div>
          </div>
        ))}
      </div>
    </Container>
  </section>
  
  <!-- CTA Section -->
  <section class="py-20 bg-cool-gray-50 dark:bg-gray-800/50 relative overflow-hidden">
    <!-- Decorative elements -->
    <div class="absolute inset-0">
      <div class="absolute top-1/2 left-1/4 w-64 h-64 bg-greenberry-500/10 rounded-full filter blur-3xl opacity-70"></div>
      <div class="absolute bottom-0 right-1/4 w-64 h-64 bg-greenberry-600/10 rounded-full filter blur-3xl opacity-60"></div>
    </div>
    
    <Container>
      <div class="max-w-4xl mx-auto bg-white/90 dark:bg-gray-800/90 backdrop-blur-md rounded-2xl shadow-xl p-10 border border-white/40 dark:border-gray-700/40 relative z-10">
        <div class="text-center mb-8">
          <Badge text="START YOUR PROJECT" variant="primary" size="md" class="mb-4" />
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
            Ready for a Website That Drives Results?
          </h2>
          <p class="text-xl text-gray-600 dark:text-gray-300">
            Let's create a custom digital solution for your Irish business.
          </p>
        </div>
        
        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <Button href="/contact" size="lg" class="font-semibold shadow-lg shadow-greenberry-500/20">
            Get Your Free Consultation
            <span class="ml-2"><i class="fa-solid fa-arrow-right"></i></span>
          </Button>
          
          <a 
            href="/services" 
            class="px-6 py-3 rounded-lg font-medium border border-greenberry-500/40 bg-white dark:bg-gray-800/30 backdrop-blur-sm text-greenberry-700 dark:text-greenberry-300 hover:bg-white/50 dark:hover:bg-gray-800/50 transition-all duration-300 shadow-sm hover:shadow flex items-center justify-center"
          >
            <span class="mr-2"><i class="fa-solid fa-list-check"></i></span>
            Our Services
          </a>
        </div>
      </div>
    </Container>
  </section>
</Layout>

<script>
  // Immediate execution to avoid any delay in showing portfolio items
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.category-filter-btn');
    const portfolioItems = document.querySelectorAll('.portfolio-item');
    
    // Make sure all items are visible initially
    portfolioItems.forEach(item => {
      item.style.display = 'block';
    });
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active', 'bg-greenberry-600', 'text-white'));
        filterButtons.forEach(btn => btn.classList.add('bg-white/70', 'dark:bg-gray-800/70', 'text-gray-700', 'dark:text-gray-300', 'border', 'border-gray-200/60', 'dark:border-gray-700/60'));
        
        // Add active class to clicked button
        button.classList.add('active', 'bg-greenberry-600', 'text-white');
        button.classList.remove('bg-white/70', 'dark:bg-gray-800/70', 'text-gray-700', 'dark:text-gray-300', 'border', 'border-gray-200/60', 'dark:border-gray-700/60');
        
        const category = button.getAttribute('data-category');
        
        // Show/hide portfolio items based on category without any animation delay
        portfolioItems.forEach(item => {
          if (category === 'all' || item.getAttribute('data-category') === category) {
            item.style.display = 'block';
          } else {
            item.style.display = 'none';
          }
        });
      });
    });
  });

  // Run this code immediately without waiting for DOMContentLoaded to ensure items are visible
  window.addEventListener('load', () => {
    const portfolioItems = document.querySelectorAll('.portfolio-item');
    portfolioItems.forEach(item => {
      item.style.display = 'block';
    });
  });
</script>

<style>
  /* Line clamp for descriptions */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>