---
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/common/Container.astro';
import Button from '../../components/common/Button.astro';
import Badge from '../../components/ui/Badge.astro';
import PageHeader from '../../components/common/PageHeader.astro';
import PageCta from '../../components/common/PageCta.astro';
import FeatureCard from '../../components/services/FeatureCard.astro';
import ProcessSteps from '../../components/services/ProcessSteps.astro';
import ServiceFAQ from '../../components/services/ServiceFAQ.astro';

// Import services data
import { services, getServiceById } from '../../data/services';
import { processSteps } from '../../data/services';
import { featureCards } from '../../data/services';
import { faqs } from '../../data/services';

export async function getStaticPaths() {
  return services.map(service => ({
    params: { slug: service.id },
    props: { service },
  }));
}

const { service } = Astro.props;
const serviceId = service.id;

// Determine the appropriate color for the service
const serviceColor = service.color || "blue";
const textColorClass = service.textColor || `text-${serviceColor}-500`;
const bgColorClass = `bg-${serviceColor}-500`;
const borderColorClass = service.borderColor || `border-${serviceColor}-500`;

// Access process steps safely
const serviceProcessSteps = processSteps && serviceId in processSteps ? processSteps[serviceId] : null;

// Access feature cards safely
const serviceFeatureCards = featureCards && serviceId in featureCards ? featureCards[serviceId] : null;

// Access FAQs safely
const serviceFaqs = faqs && serviceId in faqs ? faqs[serviceId] : null;
---

<Layout title={`${service.title} | Greenberry - Web Design for Irish Businesses`}>
  <!-- Service Hero Header -->
  <PageHeader
    title={service.title}
    description={service.description}
    backgroundVariant="decorated"
    badgeText="OUR SERVICES"
    highlightedText={service.title.split(' ')[0]}
    highlightPosition="start"
    paddingY="lg"
  />
  
  <!-- Service Features -->
  <section class="py-16 bg-white dark:bg-gray-900">
    <Container>
      <div class="max-w-3xl mx-auto text-center mb-12">
        <div class="badge-wrapper">
          <Badge text="KEY FEATURES" variant={serviceColor} size="md" />
        </div>
        <h2 class="heading-primary">
          Everything You Need
        </h2>
        <p class="section-description">
          Our {service.title.toLowerCase()} are designed to provide you with everything you need for success.
        </p>
      </div>
      
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {service.features.map((feature, index) => (
          <div class="feature-card">
            <h3 class="text-lg font-semibold mb-2">{feature}</h3>
          </div>
        ))}
      </div>
    </Container>
  </section>
  
  <!-- Feature Cards Section (if featureCards data exists for this service) -->
  {serviceFeatureCards && (
    <section class="py-16 bg-gray-50 dark:bg-gray-800/50">
      <Container>
        <div class="max-w-3xl mx-auto text-center mb-12">
          <div class="badge-wrapper">
            <Badge text="DETAILED FEATURES" variant={serviceColor} size="md" />
          </div>
          <h2 class="heading-primary">
            Comprehensive Features
          </h2>
          <p class="section-description">
            Discover all the benefits our {service.title.toLowerCase()} offer.
          </p>
        </div>
        
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {serviceFeatureCards.map((feature) => (
            <FeatureCard
              title={feature.title}
              description={feature.description}
              icon={feature.icon}
              color={feature.color}
            />
          ))}
        </div>
      </Container>
    </section>
  )}
  
  <!-- Our Process -->
  {serviceProcessSteps && (
    <section class="py-16 bg-white dark:bg-gray-900">
      <Container>
        <div class="max-w-3xl mx-auto text-center mb-12">
          <div class="badge-wrapper">
            <Badge text="OUR PROCESS" variant={serviceColor} size="md" />
          </div>
          <h2 class="heading-primary">
            How We Work
          </h2>
          <p class="section-description">
            Our structured approach ensures consistent, high-quality results for every project.
          </p>
        </div>
        
        <ProcessSteps steps={serviceProcessSteps} color={serviceColor} />
      </Container>
    </section>
  )}
  
  <!-- FAQs -->
  {serviceFaqs && (
    <section class="py-16 bg-gray-50 dark:bg-gray-800/50">
      <Container>
        <div class="max-w-3xl mx-auto text-center mb-12">
          <div class="badge-wrapper">
            <Badge text="FAQ" variant={serviceColor} size="md" />
          </div>
          <h2 class="heading-primary">
            Common Questions
          </h2>
          <p class="section-description">
            Get answers to frequently asked questions about our {service.title.toLowerCase()}.
          </p>
        </div>
        
        <ServiceFAQ faqs={serviceFaqs} />
      </Container>
    </section>
  )}
  
  <!-- CTA Section -->
  <PageCta
    title={`Ready to get started with our ${service.title.toLowerCase()}?`}
    description="Get in touch today for a free consultation and let's discuss how we can help your business grow online."
    badgeText="GET STARTED"
    primaryButtonText={service.ctaText || "Learn More"}
    primaryButtonHref="/contact"
    secondaryButtonText="See Our Portfolio"
    secondaryButtonHref="/portfolio"
    footnote="No commitment required. We'll respond within 24 hours."
  />
</Layout>

<style>
  .feature-card {
    background-color: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .feature-card:hover {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .dark .feature-card {
    background-color: rgb(31, 41, 55);
    color: white;
  }

  /* Animation delays */
  .animation-delay-700 {
    animation-delay: 700ms;
  }
  
  .animation-delay-1500 {
    animation-delay: 1500ms;
  }
</style>