---
// src/components/suite/SuiteHero.astro
import Container from '../common/Container.astro';
import Button from '../common/Button.astro';
import Badge from '../ui/Badge.astro';
import type { Suite } from '../../data/suites';

interface Props {
  suite: Suite;
}

const { suite } = Astro.props;

// Color mapping for visual consistency (used across the hero except the brand highlight)
const colorClasses = {
  greenberry: {
    badge: 'bg-greenberry-100 dark:bg-greenberry-900/50 text-greenberry-800 dark:text-greenberry-300',
    accent: 'text-greenberry-600 dark:text-greenberry-400',
    button: 'bg-greenberry-600 hover:bg-greenberry-700',
    ring: 'focus-visible:ring-2 ring-offset-2 ring-offset-white dark:ring-offset-neutral-900 focus-visible:ring-greenberry-500',
    decoration: 'bg-greenberry-500/10'
  },
  blue: {
    badge: 'bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300',
    accent: 'text-blue-600 dark:text-blue-400',
    button: 'bg-blue-600 hover:bg-blue-700',
    ring: 'focus-visible:ring-2 ring-offset-2 ring-offset-white dark:ring-offset-neutral-900 focus-visible:ring-blue-500',
    decoration: 'bg-blue-500/10'
  },
  purple: {
    badge: 'bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-300',
    accent: 'text-purple-600 dark:text-purple-400',
    button: 'bg-purple-600 hover:bg-purple-700',
    ring: 'focus-visible:ring-2 ring-offset-2 ring-offset-white dark:ring-offset-neutral-900 focus-visible:ring-purple-500',
    decoration: 'bg-purple-500/10'
  },
  amber: {
    badge: 'bg-amber-100 dark:bg-amber-900/50 text-amber-800 dark:text-amber-300',
    accent: 'text-amber-600 dark:text-amber-400',
    button: 'bg-amber-600 hover:bg-amber-700',
    ring: 'focus-visible:ring-2 ring-offset-2 ring-offset-white dark:ring-offset-neutral-900 focus-visible:ring-amber-500',
    decoration: 'bg-amber-500/10'
  }
};

const colors = colorClasses[suite.color] ?? colorClasses.greenberry;

// Brand word we want to stylize
const BRAND = 'Greenberry';

// Split the heroHeading on the FIRST occurrence of "Greenberry" so we can wrap it
let before = suite.heroHeading;
let after = '';
const idx = suite.heroHeading.indexOf(BRAND);
if (idx !== -1) {
  before = suite.heroHeading.slice(0, idx);
  after = suite.heroHeading.slice(idx + BRAND.length);
}
---

<section class="py-20 lg:py-28 bg-neutral-50 dark:bg-neutral-800/50 relative overflow-hidden">
  <div class="absolute inset-0">
    <div class={`absolute top-0 right-0 w-1/3 h-1/3 ${colors.decoration} rounded-full filter blur-3xl opacity-70 -translate-y-1/2 translate-x-1/3`}></div>
    <div class={`absolute bottom-0 left-0 w-1/3 h-1/3 ${colors.decoration} rounded-full filter blur-3xl opacity-60 translate-y-1/2 -translate-x-1/3`}></div>
  </div>


  <Container>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 items-center relative z-10">
      <div>
        <!-- Badge -->
        <div class="mb-6">
          <span class={`inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold ${colors.badge} shadow-sm`}>
            <i class={`${suite.icon} mr-2`}></i>
            {suite.name}
          </span>
        </div>

        <!-- Hero Heading with brand highlight -->
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-neutral-900 dark:text-white leading-tight mb-6">
          {idx === -1 ? (
            suite.heroHeading
          ) : (
            <>
              {before}
              <span class="relative inline-block text-greenberry-600">
                {BRAND}
                <span class="absolute -bottom-1 left-0 w-full h-1.5 bg-greenberry-500/40 rounded-full"></span>
              </span>
              {after}
            </>
          )}
        </h1>

        <p class="text-xl text-neutral-600 dark:text-neutral-300 mb-8 leading-relaxed">
          {suite.heroSubheading}
        </p>

        <!-- Key Outcomes -->
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8">
          {suite.outcomes.slice(0, 4).map((outcome) => (
            <div class="flex items-start">
              <span class={`${colors.accent} mr-3 mt-1`}>
                <i class="fa-solid fa-check-circle"></i>
              </span>
              <span class="text-neutral-700 dark:text-neutral-300">{outcome}</span>
            </div>
          ))}
        </div>

        <!-- CTAs -->
          <div class="flex flex-col sm:flex-row gap-4 mb-8">
            <!-- Solid primary -->
            <Button
              href="#plans"
              size="lg"
              variant="custom"
              class={`${colors.button} ${colors.ring} text-white font-semibold shadow-lg`}
            >
              See Plans <span class="ml-2">â†’</span>
            </Button>
            <!-- Outline secondary -->
            <button
              type="button"
              data-cal-link="greenberry/15min"
              data-cal-namespace="15min"
              data-cal-config='{"layout":"column_view"}'
              class={`px-6 py-3 rounded-lg font-medium border-2 border-current ${colors.accent} bg-white dark:bg-neutral-800 hover:bg-neutral-50 dark:hover:bg-neutral-700 transition-all duration-300`}
            >
              Book a 15-minute call
            </button>
          </div>

      </div>

      <!-- Right side: Feature highlights or image -->
      <div class="relative">
        <div class="bg-white dark:bg-neutral-800 rounded-xl shadow-xl p-8">
          <h3 class="text-xl font-bold text-neutral-900 dark:text-white mb-6">
            What's Included
          </h3>

          <!-- Core Features -->
          <div class="space-y-4">
            {suite.coreFeatures.map((feature) => (
              <div class="flex items-start">
                <span class={`${colors.accent} mr-3 mt-1 flex-shrink-0`}>
                  <i class="fa-solid fa-check"></i>
                </span>
                <span class="text-neutral-700 dark:text-neutral-300">{feature}</span>
              </div>
            ))}
          </div>

          <!-- Vertical Features Preview -->
          <div class="mt-8 pt-6 border-t border-neutral-200 dark:border-neutral-700">
            <p class="text-sm font-semibold text-neutral-600 dark:text-neutral-400 mb-3">
              SPECIALIZED FEATURES
            </p>
            <div class="flex flex-wrap gap-2">
              {suite.specialisedFeatures.slice(0, 5).map((feature) => (
                <span class={`px-3 py-1 rounded-full text-xs font-medium ${colors.badge} shadow-xs`}>
                  {feature}
                </span>
              ))}
              <span class="px-3 py-1 rounded-full text-xs font-medium bg-neutral-100 dark:bg-neutral-700 text-neutral-600 dark:text-neutral-300">
                + more
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>
</section>
