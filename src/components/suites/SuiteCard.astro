---
import Icon from '../common/Icon.astro';
import Badge from '../ui/Badge.astro';
import type { Suite } from '../../data/suites';

export interface Props extends Suite {
  ctaText?: string;
}

const {
  title,
  description,
  icon,
  color = 'greenberry',   // 'greenberry' | 'blue' | 'purple' | 'amber'
  link = '#',
  targetSector,
  ctaText = 'Learn More'
} = Astro.props as Props;

// Color tokens (avoid dynamic Tailwind strings)
const colorClasses = {
  greenberry: {
    text: 'text-greenberry-700 dark:text-greenberry-300',
    iconBg: 'bg-greenberry-50 dark:bg-greenberry-900/40',
    ring: 'ring-greenberry-500/30',
    shadow: 'shadow-greenberry-500/15',
    border: 'border-greenberry-100 dark:border-greenberry-900/30',
    topBar: 'from-greenberry-500 to-greenberry-400',
    cta: 'text-greenberry-700 dark:text-greenberry-300',
  },
  blue: {
    text: 'text-blue-700 dark:text-blue-300',
    iconBg: 'bg-blue-50 dark:bg-blue-900/40',
    ring: 'ring-blue-500/30',
    shadow: 'shadow-blue-500/15',
    border: 'border-blue-100 dark:border-blue-900/30',
    topBar: 'from-blue-500 to-blue-400',
    cta: 'text-blue-700 dark:text-blue-300',
  },
  purple: {
    text: 'text-purple-700 dark:text-purple-300',
    iconBg: 'bg-purple-50 dark:bg-purple-900/40',
    ring: 'ring-purple-500/30',
    shadow: 'shadow-purple-500/15',
    border: 'border-purple-100 dark:border-purple-900/30',
    topBar: 'from-purple-500 to-purple-400',
    cta: 'text-purple-700 dark:text-purple-300',
  },
  amber: {
    text: 'text-amber-700 dark:text-amber-300',
    iconBg: 'bg-amber-50 dark:bg-amber-900/40',
    ring: 'ring-amber-500/30',
    shadow: 'shadow-amber-500/15',
    border: 'border-amber-100 dark:border-amber-900/30',
    topBar: 'from-amber-500 to-amber-400',
    cta: 'text-amber-700 dark:text-amber-300',
  },
} as const;

const colorToBadge: Record<Suite['color'], 'green' | 'blue' | 'purple' | 'yellow'> = {
  greenberry: 'green',
  blue: 'blue',
  purple: 'purple',
  amber: 'yellow',
};

const c = colorClasses[color] ?? colorClasses.greenberry;
---

<a href={link} class="group block focus:outline-none">
  <article
    class={`
      relative h-full flex flex-col
      bg-white dark:bg-neutral-800
      border ${c.border}
      rounded-2xl
      shadow-sm ${c.shadow}
      transition-all duration-300
      hover:-translate-y-0.5 hover:shadow-xl
      hover:ring-2 ${c.ring}
      focus-visible:ring-2 ${c.ring}
    `}
  >
    <!-- Top gradient accent bar -->
    <div class={`absolute inset-x-0 top-0 h-1 bg-gradient-to-r ${c.topBar}`}></div>

    <div class="p-6 flex-grow">
      <div class="flex items-center mb-4">
        <div class={`mr-4 p-3 rounded-full ${c.iconBg}`}>
          <Icon name={icon} class={`text-2xl ${c.text}`} />
        </div>
        <div>
          <h3 class={`text-xl font-bold ${c.text} group-hover:underline`}>{title}</h3>
          {targetSector && (
            <Badge
              text={targetSector}
              variant={colorToBadge[color]}
              size="sm"
              class="mt-1 opacity-90"
            />
          )}
        </div>
      </div>

      <p class="text-neutral-600 dark:text-neutral-300 text-sm mb-4 line-clamp-3">
        {description}
      </p>
    </div>

    <div class="p-6 bg-neutral-50 dark:bg-neutral-800/50 border-t border-neutral-100 dark:border-neutral-700/50">
      <span class={`font-semibold ${c.cta} text-sm group-hover:underline`}>
        {ctaText} &rarr;
      </span>
    </div>
  </article>
</a>

<style>
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
</style>
