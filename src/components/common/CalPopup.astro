---
/* Lazy-load Cal.com on first interaction to avoid main-thread work on initial load */
---

<div class="cal-floating-button-container">
  <button
    class="cal-floating-button"
    data-cal-link="greenberry/15min"
    data-cal-namespace="15min"
    data-cal-config='{"layout":"column_view"}'
    type="button"
  >
    <span class="calendar-icon" aria-hidden="true">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
        <line x1="16" y1="2" x2="16" y2="6"></line>
        <line x1="8" y1="2" x2="8" y2="6"></line>
        <line x1="3" y1="10" x2="21" y2="10"></line>
      </svg>
    </span>
    <span class="button-text">Book a call</span>
  </button>
</div>

<script is:inline>
  (function () {
    const btn = document.querySelector('.cal-floating-button');
    if (!btn) return;

    let calLoaded = false;
    const loadCal = () => new Promise((resolve) => {
      if (calLoaded) return resolve();
      calLoaded = true;
      const s = document.createElement('script');
      s.src = 'https://app.cal.com/embed/embed.js';
      s.async = true;
      s.defer = true;
      s.onload = () => {
        // Init namespace and UI theme after script loads
        window.Cal("init", "15min", { origin: "https://cal.com" });
        window.Cal.ns["15min"]("ui", {
          cssVarsPerTheme: { light: { "cal-brand": "#16A349" }, dark: { "cal-brand": "#16A349" } },
          hideEventTypeDetails: false,
          layout: "month_view"
        });
        resolve();
      };
      document.head.appendChild(s);
    });

    // First click: load script, then re-trigger the click so Cal handles it natively
    const firstClick = async (e) => {
      e.preventDefault();
      btn.removeEventListener('click', firstClick);
      await loadCal();
      // Re-dispatch a click for Cal's auto-binding to catch it
      setTimeout(() => btn.click(), 0);
    };

    btn.addEventListener('click', firstClick, { passive: false });

    // Optional: prefetch Cal JS when idle or when button is near viewport for faster first open
    const prefetch = () => { if (!calLoaded) loadCal(); };
    if ('requestIdleCallback' in window) requestIdleCallback(prefetch, { timeout: 4000 });
    else setTimeout(prefetch, 4000);

    if ('IntersectionObserver' in window) {
      const io = new IntersectionObserver((entries) => {
        if (entries.some(e => e.isIntersecting)) {
          prefetch();
          io.disconnect();
        }
      }, { rootMargin: '300px' });
      io.observe(btn);
    }
  })();
</script>

<style>
  .cal-floating-button-container {
    position: fixed;
    bottom: 24px;
    right: 24px;
    z-index: 999;
    /* own layer (also set in global) */
  }

  .cal-floating-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 20px;
    background-color: #16A349;
    color: #fff;
    border: none;
    border-radius: 50px;
    font-family: system-ui, -apple-system, sans-serif;
    font-weight: 600;
    font-size: 16px;
    cursor: pointer;
    transition: transform .2s ease, box-shadow .2s ease, background-color .2s ease;
    box-shadow: 0 4px 10px rgba(0,0,0,.2);
    white-space: nowrap;
    touch-action: manipulation; /* reduce delays on mobile */
    backface-visibility: hidden; /* help compositing on iOS */
    -webkit-tap-highlight-color: transparent;
  }

  .cal-floating-button:hover {
    background-color: #138a3d;
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0,0,0,.25);
  }

  .cal-floating-button:active {
    transform: translateY(0);
    box-shadow: 0 4px 8px rgba(0,0,0,.2);
  }

  .calendar-icon { display: inline-flex; align-items: center; }

  @media (max-width: 768px) {
    .cal-floating-button-container { bottom: 16px; right: 16px; }
    .cal-floating-button { padding: 10px 16px; font-size: 14px; }
    .calendar-icon svg { width: 20px; height: 20px; }
  }

  @media (prefers-color-scheme: dark) {
    .cal-floating-button {
      box-shadow: 0 4px 10px rgba(0,0,0,.4);
    }
    .cal-floating-button:hover {
      box-shadow: 0 6px 12px rgba(0,0,0,.5);
    }
  }
</style>
