---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  block?: boolean;
  class?: string;
  [x: string]: any;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  block = false,
  class: className = '',
  ...rest
} = Astro.props;

const variants = {
  primary: 'bg-green-600 hover:bg-green-700 text-white border-transparent',
  secondary: 'bg-gray-200 hover:bg-gray-300 text-gray-800 border-transparent dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-100',
  outline: 'bg-transparent hover:bg-green-50 text-green-600 border-green-600 dark:text-green-400 dark:border-green-400 dark:hover:bg-gray-800',
};

const sizes = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-5 py-2.5',
  lg: 'px-6 py-3 text-lg',
};

const classes = [
  'rounded-md font-medium border-2 inline-flex items-center justify-center transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500',
  variants[variant],
  sizes[size],
  block ? 'w-full' : '',
  className,
];
---

{href ? (
  <a href={href} class:list={classes} {...rest}>
    <slot />
  </a>
) : (
  <button class:list={classes} {...rest}>
    <slot />
  </button>
)}