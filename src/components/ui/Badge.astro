---
export interface Props {
  text: string;
  variant?: 'default' | 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'purple';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  [x: string]: any;
}

const {
  text,
  variant = 'default',
  size = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const variants = {
  default: 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',
  primary: 'bg-greenberry-100 text-greenberry-800 dark:bg-greenberry-900/70 dark:text-greenberry-300',
  success: 'bg-green-100 text-green-800 dark:bg-green-900/70 dark:text-green-300',
  warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/70 dark:text-yellow-300',
  danger: 'bg-red-100 text-red-800 dark:bg-red-900/70 dark:text-red-300',
  info: 'bg-blue-100 text-blue-800 dark:bg-blue-900/70 dark:text-blue-300',
  purple: 'bg-purple-100 text-purple-800 dark:bg-purple-900/70 dark:text-purple-300',
};

const sizes = {
  sm: 'text-xs py-0.5 px-2',
  md: 'text-sm py-1 px-3',
  lg: 'text-base py-1.5 px-4',
};

const classes = [
  'inline-block rounded-full font-medium tracking-wide',
  variants[variant],
  sizes[size],
  className,
];
---

<span class:list={classes} {...rest}>
  {text}
</span>