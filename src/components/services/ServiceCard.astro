---
import Button from '../common/Button.astro';

export interface Props {
  id: string;
  title: string;
  description: string;
  icon: string;
  color: string;
  textColor: string;
  borderColor: string;
  buttonTextColor?: string; // New prop for button text color
  features: string[];
  link: string;
  ctaText?: string;
}

const {
  id,
  title,
  description,
  icon,
  color,
  textColor,
  borderColor,
  buttonTextColor = "text-greenberry-500",
  features,
  link,
  ctaText = "Learn More"
} = Astro.props;

// Construct the full link URL using the CMS value.
// For example, if link = "websites", then linkUrl becomes "/services/websites"
const linkUrl = `/services/${link}`;
---

<div id={id} class={`bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border-t-4 ${borderColor}`}>
  <div class="p-6">
    <div class={`${textColor} text-4xl mb-4`}>
      <i class={icon}></i>
    </div>
    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">
      {title}
    </h3>
    <p class="text-gray-600 dark:text-gray-300 mb-6">
      {description}
    </p>
    
    <ul class="space-y-2 mb-6">
      {features.map((feature) => (
        <li class="flex items-start">
          <span class="text-greenberry-500 mr-2 mt-1"><i class="fa-solid fa-check"></i></span>
          <span class="text-gray-700 dark:text-gray-300">{feature}</span>
        </li>
      ))}
    </ul>
    
    <div class="mt-6">
      <Button href={linkUrl} variant="outline" size="md" class={`w-full justify-center font-medium ${buttonTextColor} border-current hover:bg-gray-50 dark:hover:bg-gray-700/50`}>
        {ctaText}
        <span class="ml-2"><i class="fa-solid fa-arrow-right"></i></span>
      </Button>
    </div>
  </div>
</div>