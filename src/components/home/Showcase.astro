---
import Container from '../common/Container.astro';
import Badge from '../ui/Badge.astro';
import Button from '../common/Button.astro';
import Icon from '../common/Icon.astro';

// Import suite data
import { suites, type Suite } from '../../data/suites';

// Function to get a nuanced color for features/borders based on the suite's primary color
const getNuancedColorClasses = (baseColor: string | undefined) => {
  if (!baseColor) return {
    badgeBg: "bg-gray-100 dark:bg-gray-700/50",
    badgeText: "text-gray-800 dark:text-gray-300",
    iconBg: "bg-gray-100 dark:bg-gray-700/50",
    iconText: "text-gray-600 dark:text-gray-400",
    borderColor: "border-greenberry-500", // Default to main accent
  };

  const colorMap: Record<string, { badgeBg: string; badgeText: string; iconBg: string; iconText: string; borderColor: string; }> = {
    // Using your existing greenberry as a strong base, then adding other relevant hues
    greenberry: {
      badgeBg: "bg-greenberry-100 dark:bg-greenberry-700/50",
      badgeText: "text-greenberry-800 dark:text-greenberry-300",
      iconBg: "bg-greenberry-50 dark:bg-greenberry-900/30",
      iconText: "text-greenberry-600 dark:text-greenberry-400",
      borderColor: "border-greenberry-500",
    },
    blue: {
      badgeBg: "bg-blue-100 dark:bg-blue-700/50",
      badgeText: "text-blue-800 dark:text-blue-300",
      iconBg: "bg-blue-50 dark:bg-blue-900/30",
      iconText: "text-blue-600 dark:text-blue-400",
      borderColor: "border-accent-blue-500",
    },
    purple: {
      badgeBg: "bg-purple-100 dark:bg-purple-700/50",
      badgeText: "text-purple-800 dark:text-purple-300",
      iconBg: "bg-purple-50 dark:bg-purple-900/30",
      iconText: "text-purple-600 dark:text-purple-400",
      borderColor: "border-purple-500",
    },
    amber: { // Mapped from yellow/orange for consistency
      badgeBg: "bg-amber-100 dark:bg-amber-700/50",
      badgeText: "text-amber-800 dark:text-amber-300",
      iconBg: "bg-amber-50 dark:bg-amber-900/30",
      iconText: "text-amber-600 dark:text-amber-400",
      borderColor: "border-accent-orange-500",
    },
    red: {
      badgeBg: "bg-red-100 dark:bg-red-700/50",
      badgeText: "text-red-800 dark:text-red-300",
      iconBg: "bg-red-50 dark:bg-red-900/30",
      iconText: "text-red-600 dark:text-red-400",
      borderColor: "border-accent-red-500",
    }
  };
  return colorMap[baseColor.toLowerCase()] || colorMap.greenberry;
};
---

<section class="py-16 lg:py-24 bg-neutral-50 dark:bg-gray-800/50 relative overflow-hidden">
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute top-0 right-0 w-96 h-96 bg-greenberry-500/10 rounded-full filter blur-3xl opacity-70 translate-x-1/3 -translate-y-1/3"></div>
    <div class="absolute bottom-0 left-0 w-96 h-96 bg-accent-blue-500/10 rounded-full filter blur-3xl opacity-60 -translate-x-1/3 translate-y-1/3"></div>
  </div>

  <Container>
    <div class="max-w-3xl mx-auto text-center mb-12 lg:mb-16 relative z-10">
      <div class="badge-wrapper">
        <Badge text="TAILORED PACKAGES" variant="primary" size="md" />
      </div>
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4 leading-tight">
        Industry-Specific Digital Suites
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        Explore our comprehensive suites, crafted with tailored solutions and services to meet the unique demands of your sector.
      </p>
    </div>

    {suites.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
        {suites.map((suite) => {
          const { badgeBg, badgeText, iconBg, iconText, borderColor } = getNuancedColorClasses(suite.color);

          return (
            <a href={suite.link} class={`group block rounded-xl overflow-hidden bg-white/60 dark:bg-gray-800/60 backdrop-blur-md shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 focus:outline-none focus:ring-2 focus:ring-greenberry-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 border border-white/20 dark:border-gray-700/20`}>
              <div class="relative p-6">
                {/* Icon Area: Subtle background with the icon */}
                <div class={`w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center mb-4 transition-all duration-300 ${iconBg} ${iconText} group-hover:scale-105 group-hover:shadow-md`}>
                  <Icon name={suite.icon} class="text-3xl sm:text-4xl group-hover:animate-pulse" />
                </div>
                
                {/* Target Sector Badge */}
                <div class="mb-3">
                  <span class={`px-3 py-1 text-xs sm:text-sm font-semibold rounded-full shadow-sm ${badgeBg} ${badgeText}`}>
                    {suite.targetSector || suite.title.split(' ')[0]}
                  </span>
                </div>
                
                {/* Content */}
                <h3 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mb-1 sm:mb-2 group-hover:text-greenberry-600 dark:group-hover:text-greenberry-400 transition-colors">
                  {suite.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base mb-3 sm:mb-4 line-clamp-3">
                  {suite.description}
                </p>
                
                {/* Features (subtle badges) */}
                {suite.features && suite.features.length > 0 && (
                  <div class="flex flex-wrap gap-1.5 sm:gap-2 mb-4">
                    {suite.features.slice(0, 3).map(feature => ( // Show max 3 features for brevity
                      <span class={`px-2.5 py-1 rounded-full text-xs font-medium inline-block whitespace-nowrap ${badgeBg} ${badgeText} shadow-sm`}>
                        {feature.split(':')[0]}
                      </span>
                    ))}
                  </div>
                )}

                {/* Call to Action */}
                <div class="flex items-center text-greenberry-600 hover:text-greenberry-700 dark:text-greenberry-400 dark:hover:text-greenberry-300 font-medium group transition-colors">
                  Learn More
                  <Icon name="fa-solid fa-arrow-right" class="ml-1 text-xs transition-transform group-hover:translate-x-1 duration-300" />
                </div>
              </div>
            </a>
          );
        })}
      </div>
    ) : (
      <p class="text-center text-lg text-gray-600 dark:text-gray-300">
        No suites are currently available. Please check back soon!
      </p>
    )}
    
    <div class="text-center mt-12 lg:mt-16">
      <Button href="/suites" variant="primary" size="lg" class="gap-2 group shadow-lg hover:shadow-xl transition-shadow">
        Explore All Suites
        <Icon name="fa-solid fa-arrow-right" class="group-hover:translate-x-1 transition-transform duration-300" />
      </Button>
    </div>
  </Container>
</section>

<style>
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
</style>