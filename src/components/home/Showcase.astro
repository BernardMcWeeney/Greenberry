---
import Container from '../common/Container.astro';
import Badge from '../ui/Badge.astro';
import Icon from '../common/Icon.astro';

// Import suite data
import { suites, type Suite } from '../../data/suites';

// Function to get a nuanced color for features/borders based on the suite's primary color
const getNuancedColorClasses = (baseColor: Suite['color'] | undefined) => {
  if (!baseColor) {
    return {
      badgeBg: 'bg-gray-100 dark:bg-gray-700/50',
      badgeText: 'text-gray-800 dark:text-gray-300',
      iconBg: 'bg-gray-100 dark:bg-gray-700/50',
      iconText: 'text-gray-600 dark:text-gray-400',
      borderColor: 'border-greenberry-500', // Default to main accent
    };
  }

  const colorMap: Record<
    string,
    { badgeBg: string; badgeText: string; iconBg: string; iconText: string; borderColor: string }
  > = {
    greenberry: {
      badgeBg: 'bg-greenberry-100 dark:bg-greenberry-700/50',
      badgeText: 'text-greenberry-800 dark:text-greenberry-300',
      iconBg: 'bg-greenberry-50 dark:bg-greenberry-900/30',
      iconText: 'text-greenberry-600 dark:text-greenberry-400',
      borderColor: 'border-greenberry-500',
    },
    blue: {
      badgeBg: 'bg-blue-100 dark:bg-blue-700/50',
      badgeText: 'text-blue-800 dark:text-blue-300',
      iconBg: 'bg-blue-50 dark:bg-blue-900/30',
      iconText: 'text-blue-600 dark:text-blue-400',
      borderColor: 'border-accent-blue-500',
    },
    purple: {
      badgeBg: 'bg-purple-100 dark:bg-purple-700/50',
      badgeText: 'text-purple-800 dark:text-purple-300',
      iconBg: 'bg-purple-50 dark:bg-purple-900/30',
      iconText: 'text-purple-600 dark:text-purple-400',
      borderColor: 'border-purple-500',
    },
    amber: {
      badgeBg: 'bg-amber-100 dark:bg-amber-700/50',
      badgeText: 'text-amber-800 dark:text-amber-300',
      iconBg: 'bg-amber-50 dark:bg-amber-900/30',
      iconText: 'text-amber-600 dark:text-amber-400',
      borderColor: 'border-accent-orange-500',
    },
    red: {
      badgeBg: 'bg-red-100 dark:bg-red-700/50',
      badgeText: 'text-red-800 dark:text-red-300',
      iconBg: 'bg-red-50 dark:bg-red-900/30',
      iconText: 'text-red-600 dark:text-red-400',
      borderColor: 'border-accent-red-500',
    },
  };

  return colorMap[baseColor.toLowerCase()] || colorMap.greenberry;
};
---

<section class="py-16 lg:py-24 bg-neutral-50 dark:bg-gray-800/50 relative overflow-hidden">
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute top-0 right-0 w-96 h-96 bg-greenberry-500/10 rounded-full filter blur-3xl opacity-70 translate-x-1/3 -translate-y-1/3"></div>
    <div class="absolute bottom-0 left-0 w-96 h-96 bg-accent-blue-500/10 rounded-full filter blur-3xl opacity-60 -translate-x-1/3 translate-y-1/3"></div>
  </div>

  <Container>
    <div class="max-w-3xl mx-auto text-center mb-12 lg:mb-16 relative z-10">
      <div class="badge-wrapper">
        <Badge text="TAILORED PACKAGES" variant="primary" size="md" />
      </div>
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4 leading-tight">
        Industry-Specific Digital Suites
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        Explore our comprehensive suites, crafted with tailored solutions and services to meet the unique demands of your sector.
      </p>
    </div>

    <!-- Always render suites (no conditional needed) -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
      {suites.map((suite) => {
        const { badgeBg, badgeText, iconBg, iconText } = getNuancedColorClasses(suite.color);
        const href = (suite as any).link || `/suites/${suite.id}`;
        return (
          <a
            href={href}
            class={`group block rounded-2xl
                    bg-white dark:bg-neutral-800
                    border border-neutral-200 dark:border-neutral-700
                    shadow-sm
                    transition-all duration-200
                    hover:-translate-y-0.5 hover:shadow-lg
                    hover:border-neutral-300 dark:hover:border-neutral-600
                    focus:outline-none focus-visible:ring-2 focus-visible:ring-greenberry-500/30`}
          >
            <div class="relative p-6">
              <div class={`w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center mb-4 transition-all duration-300 ${iconBg} ${iconText} group-hover:scale-105 group-hover:shadow-md`}>
                <Icon name={suite.icon} class="text-3xl sm:text-4xl" />
              </div>

              <div class="mb-3">
                <span class={`px-3 py-1 text-xs sm:text-sm font-semibold rounded-full shadow-xs ${badgeBg} ${badgeText}`}>
                  {suite.targetSector || suite.title.split(' ')[0]}
                </span>
              </div>

              <h3 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mb-1 sm:mb-2 group-hover:text-greenberry-600 dark:group-hover:text-greenberry-400 transition-colors">
                {suite.title}
              </h3>

              <p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base mb-3 sm:mb-4 line-clamp-3">
                {suite.description}
              </p>

              <div class="flex items-center text-greenberry-600 hover:text-greenberry-700 dark:text-greenberry-400 dark:hover:text-greenberry-300 font-medium group transition-colors">
                Learn More
                <Icon name="fa-solid fa-arrow-right" class="ml-1 text-xs transition-transform group-hover:translate-x-1 duration-300" />
              </div>
            </div>
          </a>
        );
      })}
    </div>
  </Container>
</section>

<style>
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
</style>
